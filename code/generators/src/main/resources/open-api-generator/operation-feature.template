@ignore
@op.[(${operation.operationId})]

Feature: [(${operation.summary})]
[(${operation.description})]

Background:
* url urls.[(${artifactNameUrl})]

Scenario: [(${operation.operationId})]
* def req = __arg
* def authHeader = call read('classpath:karate-auth.js') req.auth
* def headers = karate.merge(req.headers || {}, authHeader || {})

Given path [(${pathVars})]
[# th:each="par : ${operation.parameters}"][# th:if="${par.in}=='query'"]
And param [(${par.name})] = req.params.[(${par.name})]
[/][/]
And headers headers
[# th:if="${operation.requestBody}"]
And request req.body
[/]
When method [(${method})]

* def expectedStatusCode = req.statusCode || responseStatus
* match responseStatus == expectedStatusCode

# match response schema in 'test-data' or any object
* def responseContains = req.matchResponse === true && req.responseMatches? req.responseMatches : responseType == 'json'? {} : ''
* match response contains responseContains
